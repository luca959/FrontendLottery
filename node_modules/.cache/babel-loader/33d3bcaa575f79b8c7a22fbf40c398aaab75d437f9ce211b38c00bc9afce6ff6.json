{"ast":null,"code":"var _jsxFileName = \"/Users/talos/Desktop/lottery/src/Lottery.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { connectWallet, getCurrentWalletConnected } from \"./util/interact.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Lottery = () => {\n  _s();\n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\"); //default message\n  const [message, setMessage] = useState(\"\");\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [Name, setName] = useState(\"\"); //default message\n  const [Surname, setSurname] = useState(\"\"); //default message\n  const [Ticket, setTicket] = useState(\"1\"); //default message\n  const [statusTransaction, setStatusTransaction] = useState(\"\");\n  //called only once\n  useEffect(() => {\n    // get the connected wallet\n    async function getWalletConnected() {\n      const {\n        address,\n        status\n      } = await getCurrentWalletConnected();\n      setWallet(address);\n      setStatus(status);\n    }\n    getWalletConnected();\n    walletListener();\n  }, []);\n  function walletListener() {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", accounts => {\n        if (accounts.length > 0) {\n          setWallet(accounts[0]);\n        } else {\n          setWallet(\"\");\n          setStatus(\"ðŸ¦Š Connect to Metamask using the \\\"Connect Wallet\\\" button.\");\n        }\n      });\n    } else {\n      setStatus( /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", \"\\uD83E\\uDD8A\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          href: `https://metamask.io/download.html`,\n          children: \"You must install Metamask in your browser.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this));\n    }\n  }\n  const connectWalletPressed = async () => {\n    const walletResponse = await connectWallet();\n    setStatus(walletResponse.status);\n    setWallet(walletResponse.address);\n  };\n  const sellTicket = async walletAddress => {\n    //TODO: implement\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lottery\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"walletButton\",\n      onClick: connectWalletPressed,\n      children: walletAddress.length > 0 ? \"Connected: \" + String(walletAddress).substring(0, 6) + \"...\" + String(walletAddress).substring(38) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Buy Ticket:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Insert Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"name\",\n      type: \"text\",\n      value: Name,\n      required: true,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Insert Surname:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"surname\",\n      type: \"text\",\n      value: Surname,\n      required: true,\n      onChange: e => setSurname(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Insert Number of Tickets:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"Ticket\",\n      type: \"number\",\n      max: 99,\n      min: 1,\n      value: Ticket,\n      required: true,\n      onChange: e => setTicket(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"lPButton\",\n      onClick: sellTicket,\n      children: \"Sell Ticket\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: statusTransaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(Lottery, \"c/+YRODkgZuodeqeaMhvbTdQhlM=\");\n_c = Lottery;\nexport default Lottery;\nvar _c;\n$RefreshReg$(_c, \"Lottery\");","map":{"version":3,"names":["React","useEffect","useState","connectWallet","getCurrentWalletConnected","jsxDEV","_jsxDEV","Lottery","_s","walletAddress","setWallet","status","setStatus","message","setMessage","newMessage","setNewMessage","Name","setName","Surname","setSurname","Ticket","setTicket","statusTransaction","setStatusTransaction","getWalletConnected","address","walletListener","window","ethereum","on","accounts","length","children","target","href","fileName","_jsxFileName","lineNumber","columnNumber","connectWalletPressed","walletResponse","sellTicket","id","onClick","String","substring","type","value","required","onChange","e","max","min","_c","$RefreshReg$"],"sources":["/Users/talos/Desktop/lottery/src/Lottery.js"],"sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport {\n    connectWallet,\n    getCurrentWalletConnected,\n  } from \"./util/interact.js\";\n\nconst Lottery = () => {\n    const [walletAddress, setWallet] = useState(\"\");\n    const [status,setStatus] = useState(\"\");//default message\n    const [message,setMessage] = useState(\"\");\n    const [newMessage,setNewMessage] = useState(\"\");\n    const [Name, setName] = useState(\"\"); //default message\n    const [Surname, setSurname] = useState(\"\"); //default message\n    const [Ticket, setTicket] = useState(\"1\"); //default message\n    const [statusTransaction, setStatusTransaction] = useState(\"\");\n    //called only once\n    useEffect(() => {\n        // get the connected wallet\n        async function getWalletConnected() {\n            const { address, status } = await getCurrentWalletConnected();\n            setWallet(address);\n            setStatus(status);\n        }\n        getWalletConnected();\n        walletListener();\n    }, []);\n\n    function walletListener() {\n        if (window.ethereum) {\n            window.ethereum.on(\"accountsChanged\", (accounts) => {\n                if (accounts.length > 0) {\n                    setWallet(accounts[0]);\n                } else {\n                    setWallet(\"\");\n                    setStatus(\"ðŸ¦Š Connect to Metamask using the \\\"Connect Wallet\\\" button.\");\n                }\n            });\n        } else {\n            setStatus(\n                <p>\n                    {\" \"}\n                    ðŸ¦Š{\" \"}\n                    <a target=\"_blank\" href={`https://metamask.io/download.html`}>\n                        You must install Metamask in your browser.\n                    </a>\n                </p>\n            );\n        }\n    }\n\n\n    const connectWalletPressed = async () => {\n        const walletResponse = await connectWallet();\n        setStatus(walletResponse.status);\n        setWallet(walletResponse.address);\n    };\n\n    const sellTicket = async (walletAddress) => {\n        //TODO: implement\n    };\n\n    return (\n        <div id=\"container\">\n\n            <h1>Lottery</h1>\n            <button id=\"walletButton\" onClick={connectWalletPressed}>\n        {walletAddress.length > 0 ? (\n          \"Connected: \" +\n          String(walletAddress).substring(0, 6) +\n          \"...\" +\n          String(walletAddress).substring(38)\n        ) : (\n          <span>Connect Wallet</span>\n        )}\n      </button>\n            <h2>Buy Ticket:</h2>\n            <p>Insert Name:</p>\n            <input\n                id=\"name\"\n                type=\"text\"\n                value={Name}\n                required\n                onChange={(e) => setName(e.target.value)}\n            />\n            <p>Insert Surname:</p>\n            <input\n                id=\"surname\"\n                type=\"text\"\n                value={Surname}\n                required\n                onChange={(e) => setSurname(e.target.value)}\n            />\n            <p>Insert Number of Tickets:</p>\n            <input\n                id=\"Ticket\"\n                type=\"number\"\n                max={99}\n                min={1}\n                value={Ticket}\n                required\n                onChange={(e) => setTicket(e.target.value)}\n            />\n            <button id=\"lPButton\" onClick={sellTicket}>\n                Sell Ticket\n            </button>\n            <p>{statusTransaction}</p>\n        </div>\n    );\n};\n\nexport default Lottery;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}